游늷 Descripci칩n del Problema

Una empresa de alquiler de autos necesita un sistema para gestionar su flota de veh칤culos, los clientes y los contratos de alquiler. El sistema debe garantizar la correcta administraci칩n de los autos, validando disponibilidad, evitando conflictos de fechas y permitiendo consultar informaci칩n de manera eficiente.

游늷 Requerimientos del Sistema
1. Clasificaci칩n de Autos y Contratos

Cada Auto debe tener:

C칩digo 칰nico.

Marca.

Modelo.

Tipo (sed치n, SUV, camioneta, deportivo).

Precio por d칤a.

Estado (disponible / alquilado).

Cada Contrato de Alquiler debe tener:

C칩digo 칰nico.

Cliente asociado (nombre y c칠dula).

Auto alquilado.

Fecha de inicio y fin.

Cantidad de d칤as.

Precio total calculado.

游녤 Aplica herencia para modelar diferentes tipos de autos si lo deseas (por ejemplo: AutoSedan, AutoSUV, etc.).

2. Registro de Autos y Contratos

Registrar autos y contratos desde consola.

Validar que:

No existan c칩digos duplicados.

No se creen contratos para autos ocupados en el rango de fechas dado.

El precio no sea negativo.

3. Operaciones del Sistema (Colecciones y Streams)

El sistema debe permitir:

a) Registrar nuevos autos y contratos (almacenados en List o Map).
b) Listar autos por tipo y mostrar su disponibilidad.
c) Consultar autos disponibles en un rango de fechas.
d) Registrar un contrato de alquiler verificando disponibilidad.
e) Listar todos los contratos de un cliente y calcular cu치nto ha gastado en total.

4. Manejo de Excepciones

Crear excepciones personalizadas para:

C칩digo duplicado.

Fechas inv치lidas.

Autos ocupados en las fechas solicitadas.

Datos inconsistentes (precio negativo, cliente vac칤o, etc.).

5. Requisitos Adicionales

Usar POO con encapsulamiento en las clases.

Implementar un men칰 en consola que permita ejecutar todas las operaciones.

Documentar las clases con comentarios.